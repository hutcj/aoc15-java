/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package advent;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;


public class TestApp {
    private LinkedList<HashMap<String,String>> partOneTests;
    private LinkedList<HashMap<String,String>> partTwoTests;
    private ArrayList<PuzzleDay> partOneTestDays = new ArrayList<PuzzleDay>();
    private ArrayList<PuzzleDay> partTwoTestDays = new ArrayList<PuzzleDay>();

    @Test public void testDay01() {
        //Prep part 1 test cases
        TestCase t1 = new TestCase();
        t1.add("(())","0");
        t1.add("()()","0");
        t1.add("(((","3");
        t1.add("(()(()(","3");
        t1.add("))(((((","3");
        t1.add("())","-1");
        t1.add("))(","-1");
        t1.add(")))","-3");
        t1.add(")())())","-3");
        this.partOneTests = t1.getTests();

        //Prep part 2 test cases
        TestCase t2 = new TestCase();
        t2.add(")","1");
        t2.add("()())","5");
        this.partTwoTests = t2.getTests();

        for (HashMap<String,String> t : partOneTests) {
            //Execute each part 1 test and store reference object
            partOneTestDays.add(new Day01(t.get("input")));
        }

        for (HashMap<String,String> t : partTwoTests) {
            //Execute each part 2 test and store reference object
            partTwoTestDays.add(new Day01(t.get("input")));
        }
        
        //Compare expected vs actual results
        verifyAll();
    }

    @Test public void testDay02() {
        //Part 1 prep
        TestCase t1 = new TestCase();
        t1.add("2x3x4","58");
        t1.add("1x1x10","43");
        this.partOneTests = t1.getTests();

        //Part 2 prep
        TestCase t2 = new TestCase();
        t2.add("","");
        this.partTwoTests = t2.getTests();

        for (HashMap<String,String> t : partOneTests) {
            //Execute each part 1 test and store reference object
            partOneTestDays.add(new Day02(t.get("input")));
        }

        // for (HashMap<String,String> t : partTwoTests) {
        //     //Execute each part 2 test and store reference object
        //     partTwoTestDays.add(new Day02(t.get("input")));
        // }
        
        //Compare expected vs actual results
        // verifyAll();
        checkTests(this.partOneTests, 1);
    }

    private void verifyAll() {
        checkTests(this.partOneTests, 1);
        checkTests(this.partTwoTests, 2);
    }

    private void checkTests(LinkedList<HashMap<String,String>> testSet, int partNum) {
        int i = 0;
        int dayNum = 0;
        for (HashMap<String,String> testCase : testSet){
            dayNum = partOneTestDays.get(i).getDay();
            String input = testCase.get("input");
            String expectedOutput = testCase.get("output");
            String output = "";
            switch (partNum) {
                case 1:
                    output = partOneTestDays.get(i).partOne();
                    break;
                case 2:
                    output = partTwoTestDays.get(i).partTwo();
                    break;
                default:
                    System.err.println("Invalid Part number ''" + partNum + "'' Selected for Day " + dayNum + " Test.");
                    System.exit(1);
                    break;
            }
            assertEquals("Day " + dayNum + " Part " + partNum + " failed for input: " + input, expectedOutput, output);
            i++;
        }
    }
}
